services:
  app:
    image: ${IMAGE_TAG:-ghcr.io/anfocic/rainlo:latest}
    # For local testing, you can build from source instead:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    # No direct port exposure - accessed through nginx
    expose:
      - "80"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_KEY=${APP_KEY}
      - APP_URL=${APP_URL:-https://api.rainlo.app}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_DATABASE=rainlo
      - DB_USERNAME=rainlo
      - DB_PASSWORD=${DB_PASSWORD}
      - LOG_CHANNEL=stderr
      - LOG_LEVEL=info
      - CACHE_STORE=file
      - SESSION_DRIVER=file
      - QUEUE_CONNECTION=sync
    depends_on:
      - db
    volumes:
      - app_storage:/var/www/html/storage
      - app_cache:/var/www/html/bootstrap/cache
    restart: unless-stopped
    networks:
      - rainlo-network

  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=rainlo
      - MYSQL_USER=rainlo
      - MYSQL_PASSWORD=${DB_PASSWORD}
    # Database not exposed externally in production
    expose:
      - "3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - rainlo-network
    command: --default-authentication-plugin=mysql_native_password



  # Nginx reverse proxy (for Cloudflare Tunnel)
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"  # Only expose on localhost for tunnel
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - rainlo-network



volumes:
  db_data:
    driver: local
  app_storage:
    driver: local
  app_cache:
    driver: local
  nginx_logs:
    driver: local

networks:
  rainlo-network:
    driver: bridge
